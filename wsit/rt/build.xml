<?xml version="1.0" encoding="UTF-8"?>

<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the License).  You may not use this file except in
 compliance with the License.
 
 You can obtain a copy of the license at
 https://glassfish.dev.java.net/public/CDDLv1.0.html.
 See the License for the specific language governing
 permissions and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 Header Notice in each file and include the License file
 at https://glassfish.dev.java.net/public/CDDLv1.0.html.
 If applicable, add the following below the CDDL Header,
 with the fields enclosed by brackets [] replaced by
 you own identifying information:
 "Portions Copyrighted [year] [name of copyright owner]"
 
 Copyright 2006 Sun Microsystems Inc. All Rights Reserved
-->


<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<project name="WSIT-Runtime" default="default" basedir=".">
    <description>Builds, tests, and runs the project WSIT-Runtime.</description>
    <import file="nbproject/build-impl.xml"/>
    <import file="../properties.xml"/>

    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.gen-src.dir" value="${build.dir}/gen-src"/>


    <target name="resgen" depends="init"
            description="Generate class wrappers for all property files that contain localizable messages">

        <taskdef name="resgen" classname="com.sun.tools.resourcegen.ResourceGenTask">
            <classpath>
                <path path="${javac.classpath}"/>
                <pathelement path="${lib.dir}/tooltime/jaxws-tools.jar" />
            </classpath>
        </taskdef>

        <mkdir dir="${build.gen-src.dir}"/>

        <resgen destdir="${build.gen-src.dir}">
            <resource dir="${src.dir}" includes="com/sun/xml/ws/**/*.properties" />
        </resgen>

    </target>

    <taskdef name="concatmanifest" classname="taskdefs.ConcatManifest">
        <classpath>
            <fileset dir="../${etc.lib.dir}" includes="wsit-taskdefs.jar"/>
        </classpath>
    </taskdef>

    <macrodef name="expand-jars-macro">
        <attribute name="libdir"/>
        <element name="metainf" optional="true"/>
        <sequential>
            <property name="tmpdir" value="${dist.image.dir}/tmp"/>
            <copy file="../${etc.metainf.dir}/MANIFEST.MF" todir="${tmpdir}"/>
            <updateManifestWithVersion file="${tmpdir}/MANIFEST.MF"/>
            <concatmanifest tempdir="${tmpdir}" manifest="${tmpdir}/MANIFEST.MF">
                <fileset dir="@{libdir}">
                    <include name="*.jar"/>
                    <exclude name="*javadocs*.jar"/>
                </fileset>
            </concatmanifest>
            <delete dir="${tmpdir}/META-INF" includeemptydirs="true" excludes="services/**"/>
            <metainf/>
        </sequential>
    </macrodef>

    <macrodef name="combine-jars-macro">
        <attribute name="classesdir"/>
        <attribute name="jarname"/>
        <element name="services" optional="true"/>
        <sequential>
            <property name="tmpdir" value="${dist.image.dir}/tmp"/>
            <jar destfile="../${dist.image.wsit.lib.dir}/@{jarname}.jar" manifest="${tmpdir}/MANIFEST.MF">
                <services/>
                <fileset dir="@{classesdir}"/>
            </jar>
        </sequential>
    </macrodef>

    <target name="-do-jar-without-manifest">
        <available file="${dist.image.dir}/tmp" type="dir" property="runtime.jars.expanded"/>
        <antcall target="expand-jars-runtime"/>
        <antcall target="combine-jars-runtime"/>
    </target>

    <target name="expand-jars-runtime" unless="runtime.jars.expanded">
        <expand-jars-macro libdir="../${lib.runtime.dir}">
            <metainf>
                <copy todir="${tmpdir}/META-INF/services" overwrite="true">
                    <fileset dir="../etc/META-INF/services">
                        <include name="*.*"/>
                    </fileset>
                </copy>
            </metainf>
        </expand-jars-macro>
    </target>

    <target name="combine-jars-runtime">
        <combine-jars-macro jarname="${name}" classesdir="build/classes">
            <services>
                <fileset dir="${tmpdir}">
                    <include name="**/*.*"/>
                    <exclude name="**/*.TWSDL*"/>
                    <exclude name="**/*.TJava*"/>
                </fileset>
            </services>
        </combine-jars-macro>
    </target>

    <target name="test.resources.copy"
            description="Copy test resources before running tests">
        <copy todir="build/test/unit/data">
            <fileset dir="test/unit/data" includes="*.wsdl"/>
            <fileset dir="test/unit/data" includes="*.xml"/>
        </copy>
    </target>

    <target name="src-zip">
        <mkdir dir="${build.dir}/temp"/>
        <unzip dest="${build.dir}/temp">
            <fileset dir="../${lib.runtime.dir}" includes="*src.zip"/>
        </unzip>
        <delete file="${build.dir}/temp/*.txt"/>
        <delete dir="${build.dir}/temp/META-INF" includeemptydirs="true"/>
        <zip destfile="${build.dir}/${name}-src.zip">
            <fileset dir="src"/>
            <fileset dir="${build.dir}/temp"/>
        </zip>
        <delete dir="${build.dir}/temp" includeemptydirs="true"/>
    </target>

    <target name="-post-compile-test" depends="init,test.resources.copy">
    </target>

    <target name="-post-compile-test-single" depends="init,test.resources.copy">
    </target>

     <target name="create-wsit-runtime-jar" depends="wsit-jars-runtime"/>

    <!-- <target name="wsit-jars-runtime"  depends="compile">-->
     <target name="wsit-jars-runtime" >

         <mkdir dir="${rt.dir}/tmp/META-INF/services"/>
         <property name="wsit.rt.dir" value = "${rt.dir}/build"/>
         <property name="wsit.rt.jarname" value = "wsit-rt"/>
         <mkdir dir="${wsit.rt.dir}"/>


         <!--<copy todir="${rt.dir}/tmp/META-INF/services" overwrite="true">
             <fileset dir="../etc/META-INF/services">
                 <include name="*.*"/>

             </fileset>
         </copy>-->
         <updateManifestWithVersion file="${rt.dir}/tmp/MANIFEST.MF"/>

         <jar destfile="${wsit.rt.dir}/${wsit.rt.jarname}.jar" manifest="${rt.dir}/tmp/MANIFEST.MF">

                 <metainf dir="../etc/META-INF">
                     <include name="services/*.*"/>
                     <exclude name="services/*.TJavaGeneratorExtension"/>
                     <exclude name="services/*.TWSDLExtensionHandler"/>
                 </metainf>


                <fileset dir="${rt.dir}/build/classes"/>
            </jar>

         <!--<zip destfile="${wsit.rt.dir}/${wsit.rt.jarname}-src.zip">
            <fileset dir="src"/>

        </zip>-->

        <delete dir="${rt.dir}/tmp"/>

     </target>

</project>
