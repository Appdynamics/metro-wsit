<?xml version="1.0" encoding="UTF-8"?>

<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the License).  You may not use this file except in
 compliance with the License.
 
 You can obtain a copy of the license at
 https://glassfish.dev.java.net/public/CDDLv1.0.html.
 See the License for the specific language governing
 permissions and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 Header Notice in each file and include the License file
 at https://glassfish.dev.java.net/public/CDDLv1.0.html.
 If applicable, add the following below the CDDL Header,
 with the fields enclosed by brackets [] replaced by
 you own identifying information:
 "Portions Copyrighted [year] [name of copyright owner]"
 
 Copyright 2006 Sun Microsystems Inc. All Rights Reserved
-->


<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<project name="WSIT-Runtime" default="default" basedir=".">
    <description>Builds, tests, and runs the project WSIT-Runtime.</description>
    <import file="nbproject/build-impl.xml"/>
    <import file="../properties.xml"/>

    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.gen-src.dir" value="${build.dir}/gen-src"/>

    <target name="resgen" depends="init"
            description="Generate class wrappers for all property files that contain localizable messages">

        <taskdef name="resgen" classname="com.sun.tools.resourcegen.ResourceGenTask">
            <classpath>
                <path path="${javac.classpath}"/>
                <pathelement path="${basedir}/../${lib.tooltime.dir}/jaxws-tools.jar"/>
            </classpath>
        </taskdef>

        <mkdir dir="${build.gen-src.dir}"/>

        <resgen destdir="${build.gen-src.dir}">
            <resource dir="${src.dir}" includes="com/sun/xml/ws/**/*.properties, com/sun/xml/wss/**/*.properties"/>
        </resgen>
    </target>

    <target name="-pre-compile" depends="resgen"
            description="Hook resgen target into compilation process"/>

    <target name="-pre-compile-single" depends="resgen"
            description="Hook resgen target into single file compilation process"/>

    <taskdef name="concatmanifest" classname="taskdefs.ConcatManifest">
        <classpath>
            <fileset dir="../${etc.lib.dir}" includes="wsit-taskdefs.jar"/>
        </classpath>
    </taskdef>

    <macrodef name="expand-jars-macro">
        <attribute name="libdir"/>
        <element name="metainf" optional="true"/>
        <sequential>
            <delete dir="${rtjar-tmpdir}"/>
            <mkdir dir="${rtjar-tmpdir}"/>
            <copy file="../${etc.metainf.dir}/MANIFEST.MF" todir="${rtjar-tmpdir}"/>
            <updateManifestWithVersion file="${rtjar-tmpdir}/MANIFEST.MF"/>
            <concatmanifest tempdir="${rtjar-tmpdir}" manifest="${rtjar-tmpdir}/MANIFEST.MF">
                <fileset dir="@{libdir}">
                    <include name="*.jar"/>
                    <exclude name="*javadocs*.jar"/>
                    <exclude name="*api*.jar"/>
                    <exclude name="jaxws-local-transport.jar"/>
                    <exclude name="activation.jar"/>
                    <exclude name="http.jar"/>
                    <exclude name="mail-1.4.jar"/>
                </fileset>
            </concatmanifest>
            <delete dir="${rtjar-tmpdir}/META-INF" includeemptydirs="true" excludes="services/**"/>
            <metainf/>
        </sequential>
    </macrodef>


    <macrodef name="expand-api-jars-macro">
        <attribute name="libdir"/>
        <element name="metainf" optional="true"/>
        <sequential>
            <delete dir="${apijar-tmpdir}"/>
            <mkdir dir="${apijar-tmpdir}"/>
            <copy file="../${etc.metainf.dir}/MANIFEST.MF" todir="${apijar-tmpdir}"/>
            <updateManifestWithVersion file="${apijar-tmpdir}/MANIFEST.MF"/>
            <concatmanifest tempdir="${apijar-tmpdir}" manifest="${apijar-tmpdir}/MANIFEST.MF">
                <fileset dir="@{libdir}" >
                    <include name="jaxb-api.jar"/>
                    <include name="jsr173_api.jar"/>
                    <include name="saaj-api.jar"/>
                    <include name="jaxws-api.jar"/>
                    <include name="jsr181-api.jar"/>

                    <exclude name="*javadocs*.jar"/>
                </fileset>
            </concatmanifest>
          <delete dir="${apijar-tmpdir}/META-INF" includeemptydirs="true" excludes="services/**"/>
            <metainf/>
        </sequential>
    </macrodef>

    <macrodef name="expand-extra-jars-macro">
        <attribute name="libdir"/>
        <element name="metainf" optional="true"/>
        <sequential>
            <delete dir="${extrajar-tmpdir}"/>
            <mkdir dir="${extrajar-tmpdir}"/>
            <copy file="../${etc.metainf.dir}/MANIFEST.MF" todir="${extrajar-tmpdir}"/>
            <updateManifestWithVersion file="${extrajar-tmpdir}/MANIFEST.MF"/>
            <concatmanifest tempdir="${extrajar-tmpdir}" manifest="${extrajar-tmpdir}/MANIFEST.MF">
                <fileset dir="@{libdir}" includes="activation.jar,http.jar,jsr250-api.jar,mail-1.4.jar">
                    <!--<includesfile name="*.jar"/>-->
                    <exclude name="*javadocs*.jar"/>
                </fileset>
            </concatmanifest>
          <delete dir="${extrajar-tmpdir}/META-INF" includeemptydirs="true" excludes="services/**"/>
            <metainf/>
        </sequential>
    </macrodef>

    <macrodef name="expand-extra-api-jars-macro">
        <attribute name="libdir"/>
        <element name="metainf" optional="true"/>
        <sequential>
            <delete dir="${extraapijar-tmpdir}"/>
            <mkdir dir="${extraapijar-tmpdir}"/>
            <copy file="../${etc.metainf.dir}/MANIFEST.MF" todir="${extraapijar-tmpdir}"/>
            <updateManifestWithVersion file="${extraapijar-tmpdir}/MANIFEST.MF"/>
            <concatmanifest tempdir="${extraapijar-tmpdir}" manifest="${extraapijar-tmpdir}/MANIFEST.MF">
                <fileset dir="@{libdir}" includes="jaxr-api.jar,jaxrpc-api.jar">
                    <!--<includesfile name="*.jar"/>-->
                    <exclude name="*javadocs*.jar"/>
                </fileset>
            </concatmanifest>
          <delete dir="${extraapijar-tmpdir}/META-INF" includeemptydirs="true" excludes="services/**"/>
            <metainf/>
        </sequential>
    </macrodef>
    <macrodef name="combine-jars-macro">
        <attribute name="classesdir"/>
        <attribute name="jarname"/>
        <attribute name="jar-tmpdir"/>
        <element name="services" optional="true"/>
        <sequential>
            <jar destfile="../${dist.image.wsit.lib.dir}/@{jarname}.jar" manifest="@{jar-tmpdir}/MANIFEST.MF">
                <services/>
                <fileset dir="@{classesdir}"/>
            </jar>
        </sequential>
    </macrodef>

    <target name="-do-jar-without-manifest">
        <available file="${tmpdir}" type="dir" property="runtime.jars.expanded"/>
        <antcall target="expand-jars-runtime"/>
        <antcall target="combine-jars-runtime"/>
        <antcall target="expand-jars-api"/>
        <antcall target="combine-jars-api"/>
        <antcall target="expand-jars-extra"/>
        <antcall target="combine-jars-extra"/>
        <antcall target="expand-jars-extra-api"/>
        <antcall target="combine-jars-extra-api"/>
    </target>

    <target name="-post-jar" depends="create-wstx-war"/>

    <!-- include wsdl files for wstx resource lookups -->
    <property name="tx.tmp" value="${tmpdir}/tx"/>
    <property name="tx.tmp.webinf" value="${tx.tmp}/WEB-INF"/>
    <macrodef name="include-wstx-resources">
        <sequential>
            <delete dir="${tx.tmp}"/>
            <mkdir dir="${tx.tmp.webinf}"/>
            <copy todir="${tx.tmp.webinf}" overwrite="true">
                <fileset dir="etc/tx/WEB-INF">
                    <!-- we only want the wsdl & xsd files -->
                    <exclude name="**/web.xml"/>
                    <exclude name="**/webservices.xml"/>
                    <exclude name="**/sun-web.xml"/>
                </fileset>
            </copy>
        </sequential>
    </macrodef>

    <target name="expand-jars-runtime" unless="runtime.jars.expanded">

        <expand-jars-macro libdir="../${lib.runtime.dir}" >
            <metainf>
                <copy todir="${rtjar-tmpdir}/META-INF/services" overwrite="true">
                    <fileset dir="../etc/META-INF/services">
                        <include name="*.*"/>
                    </fileset>
                </copy>
            </metainf>
        </expand-jars-macro>

        <!-- include wsdl files for wstx resource lookups -->
        <include-wstx-resources/>
        <mkdir dir="${rtjar-tmpdir}/WEB-INF"/>
        <copy todir="${rtjar-tmpdir}/WEB-INF" overwrite="true">
            <fileset dir="${tx.tmp.webinf}"/>
        </copy>

        <!--This step is required so that jaxrpc and xwss can run at the
            same time. When jars are getting merged in webservices-rt.jar
            the toolPlugin of one overwrites the other. This ToolPlugin.xml 
            is a consolidated version of both 
            -->
        <copy todir="${rtjar-tmpdir}/META-INF/jaxrpc" overwrite="true">
            <fileset dir="toolPlugin">
                <include name="ToolPlugin.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="expand-jars-api" unless="runtime.jars.expanded">
        <expand-api-jars-macro libdir="../${lib.runtime.dir}" >

        </expand-api-jars-macro>

    </target>

    <target name="expand-jars-extra-api" unless="runtime.jars.expanded">
        <expand-extra-api-jars-macro libdir="../${lib.runtime.dir}">

        </expand-extra-api-jars-macro>

    </target>

    <target name="expand-jars-extra" unless="runtime.jars.expanded">
        <expand-extra-jars-macro libdir="../${lib.runtime.dir}">

        </expand-extra-jars-macro>

       
    </target>

    <target name="combine-jars-runtime">
        <combine-jars-macro jarname="${name}-rt" classesdir="build/classes" jar-tmpdir="${rtjar-tmpdir}">
            <services>
                <fileset dir="${rtjar-tmpdir}">
                    <include name="**/*.*"/>
                    <exclude name="**/version.properties"/>
                    <exclude name="**/*.TWSDL*"/>
                    <exclude name="**/*.TJava*"/>
                </fileset>
            </services>
        </combine-jars-macro>
    </target>

    <target name="combine-jars-api">
        <combine-jars-macro jarname="${name}-api" classesdir="${apijar-tmpdir}" jar-tmpdir="${apijar-tmpdir}"/>

     </target>

     <target name="combine-jars-extra">
        <combine-jars-macro jarname="${name}-extra" classesdir="${extrajar-tmpdir}" jar-tmpdir="${extrajar-tmpdir}"/>


    </target>

    <target name="combine-jars-extra-api">
        <combine-jars-macro jarname="${name}-extra-api" classesdir="${extraapijar-tmpdir}" jar-tmpdir="${extraapijar-tmpdir}"/>


    </target>

    <target name="test.resources.copy"
            description="Copy test resources before running tests">
        <copy todir="build/test/unit/data">
            <fileset dir="test/unit/data" includes="*.wsdl"/>
            <fileset dir="test/unit/data" includes="*.xml"/>
        </copy>
    </target>

    <target name="src-zip">
        <delete dir="${tmpdir}"/>
        <mkdir dir="${tmpdir}"/>
        <unzip dest="${tmpdir}">
            <fileset dir="../${lib.runtime.dir}" includes="*src.zip"/>
        </unzip>
        <delete file="${tmpdir}/*.txt"/>
        <delete dir="${tmpdir}/META-INF" includeemptydirs="true"/>
        <zip destfile="${build.dir}/${name}-src.zip">
            <fileset dir="src"/>
            <fileset dir="${build.gen-src.dir}"/>
            <fileset dir="${tmpdir}"/>
        </zip>
    </target>

    <target name="-post-compile-test" depends="init,test.resources.copy">
    </target>

    <target name="-post-compile-test-single" depends="init,test.resources.copy">
    </target>

    <target name="create-wsit-runtime-jar" depends="wsit-jars-runtime, create-wstx-war"/>

    <target name="wsit-jars-runtime">
        <delete dir="${tmpdir}"/>
        <mkdir dir="${tmpdir}/META-INF/services"/>
        <property name="wsit.rt.dir" value="${rt.dir}/build"/>
        <property name="wsit.rt.jarname" value="wsit-rt"/>
        <mkdir dir="${wsit.rt.dir}"/>
        <updateManifestWithVersion file="${tmpdir}/MANIFEST.MF"/>

        <!-- include wsdl files for wstx resource lookups -->        
        <include-wstx-resources/>

        <jar destfile="${wsit.rt.dir}/${wsit.rt.jarname}.jar" manifest="${tmpdir}/MANIFEST.MF">
            <metainf dir="../etc/META-INF">
                <include name="services/*.*"/>
                <exclude name="services/*.TJavaGeneratorExtension"/>
                <exclude name="services/*.TWSDLExtensionHandler"/>
            </metainf>
            <fileset dir="${rt.dir}/build/classes"/>
            <fileset dir="${tx.tmp}"/>
        </jar>
    </target>

    <target name="create-wstx-war" depends="init" description="create wstx webservices war file">
        <property name="wstx.tmp" value="${build.dir}/wstx-tmp"/>
        <delete dir="${wstx.tmp}"/>
        <mkdir dir="${wstx.tmp}"/>
        <mkdir dir="${wstx.tmp}/lib"/>
        <copy todir="${wstx.tmp}">
            <fileset dir="${basedir}/etc/tx"/>
        </copy>
        <war destfile="../${dist.image.wsit.lib.dir}/wstx-services.war" webxml="${wstx.tmp}/WEB-INF/web.xml">
            <webinf dir="${wstx.tmp}/WEB-INF" includes="**/*" excludes="web.xml"/>
        </war>
    </target>
    
</project>
