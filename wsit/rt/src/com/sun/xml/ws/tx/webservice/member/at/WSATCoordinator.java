/*
 * The contents of this file are subject to the terms
 * of the Common Development and Distribution License
 * (the License).  You may not use this file except in
 * compliance with the License.
 * 
 * You can obtain a copy of the license at
 * https://glassfish.dev.java.net/public/CDDLv1.0.html.
 * See the License for the specific language governing
 * permissions and limitations under the License.
 * 
 * When distributing Covered Code, include this CDDL
 * Header Notice in each file and include the License file
 * at https://glassfish.dev.java.net/public/CDDLv1.0.html.
 * If applicable, add the following below the CDDL Header,
 * with the fields enclosed by brackets [] replaced by
 * you own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 * 
 * Copyright 2006 Sun Microsystems Inc. All Rights Reserved
 */

package com.sun.xml.ws.tx.webservice.member.at;

import com.sun.xml.ws.api.addressing.WSEndpointReference;

import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.EndpointReference;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.URL;
import java.util.Map;


/**
 * This class was generated by the JAXWS SI.
 * JAX-WS RI 2.1-hudson-812-EA2
 * Generated source version: 2.0
 */
@WebServiceClient(name = "WSATCoordinator", targetNamespace = "http://schemas.xmlsoap.org/ws/2004/10/wsat", wsdlLocation = "WEB-INF/wsdl/wsat.wsdl")
public class WSATCoordinator
        extends Service {

    private final static URL WSATCOORDINATOR_WSDL_LOCATION;

    static {
        WSATCOORDINATOR_WSDL_LOCATION = Thread.currentThread().getContextClassLoader().getResource("WEB-INF/wsdl/wsat.wsdl");
        //logger.finest("static initializer:", "WSDL_LOCATION = " + WSATCOORDINATOR_WSDL_LOCATION);
    }

    public WSATCoordinator(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSATCoordinator() {
        super(WSATCOORDINATOR_WSDL_LOCATION, new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "WSATCoordinator"));
    }

    /**
     * @return returns CompletionCoordinatorPortType
     */
    @WebEndpoint(name = "CompletionCoordinator")
    public CompletionCoordinatorPortType getCompletionCoordinator() {
        return (CompletionCoordinatorPortType) super.getPort(new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "CompletionCoordinator"), CompletionCoordinatorPortType.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns CompletionCoordinatorPortType
     */
    @WebEndpoint(name = "CompletionCoordinator")
    public CompletionCoordinatorPortType getCompletionCoordinator(WebServiceFeature... features) {
        return (CompletionCoordinatorPortType) super.getPort(new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "CompletionCoordinator"), CompletionCoordinatorPortType.class, features);
    }

    /**
     * @return returns CoordinatorPortType
     */
    @WebEndpoint(name = "Coordinator")
    public CoordinatorPortType getCoordinator() {
        return (CoordinatorPortType) super.getPort(new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "Coordinator"), CoordinatorPortType.class);
    }

    /**
     * @param epr      EndpointReference of returned proxy.
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns CoordinatorPortType
     */
    @WebEndpoint(name = "Coordinator")
    public CoordinatorPortType getCoordinator(EndpointReference epr, WebServiceFeature... features) {
        CoordinatorPortType result =
                (CoordinatorPortType) super.getPort(epr, CoordinatorPortType.class, features);
        
        return result;
    }
    
    /**
     * @return returns ParticipantPortType
     */
    @WebEndpoint(name = "Participant")
    public ParticipantPortType getParticipant() {
        return (ParticipantPortType) super.getPort(new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "Participant"), ParticipantPortType.class);
    }

    /**
     * @param epr      EndpointReference of returned proxy.
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns ParticipantPortType
     */
    @WebEndpoint(name = "Participant")
    public ParticipantPortType getParticipant(EndpointReference epr, WebServiceFeature... features) {
        ParticipantPortType result =
                (ParticipantPortType) super.getPort(epr, ParticipantPortType.class, features);
//        workaround((BindingProvider) result, epr);
        return result;
    }

    /**
     * @return returns CompletionInitiatorPortType
     */
    @WebEndpoint(name = "CompletionInitiator")
    public CompletionInitiatorPortType getCompletionInitiator() {
        return (CompletionInitiatorPortType) super.getPort(new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "CompletionInitiator"), CompletionInitiatorPortType.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns CompletionInitiatorPortType
     */
    @WebEndpoint(name = "CompletionInitiator")
    public CompletionInitiatorPortType getCompletionInitiator(WebServiceFeature... features) {
        return (CompletionInitiatorPortType) super.getPort(new QName("http://schemas.xmlsoap.org/ws/2004/10/wsat", "CompletionInitiator"), CompletionInitiatorPortType.class, features);
    }


}
