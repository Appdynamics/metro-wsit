# The contents of this file are subject to the terms
# of the Common Development and Distribution License
# (the License).  You may not use this file except in
# compliance with the License.
# 
# You can obtain a copy of the license at
# https://glassfish.dev.java.net/public/CDDLv1.0.html.
# See the License for the specific language governing
# permissions and limitations under the License.
# 
# When distributing Covered Code, include this CDDL
# Header Notice in each file and include the License file
# at https://glassfish.dev.java.net/public/CDDLv1.0.html.
# If applicable, add the following below the CDDL Header,
# with the fields enclosed by brackets [] replaced by
# you own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
# 
# Copyright 2006 Sun Microsystems Inc. All Rights Reserved


NO_POLICY_SELECTORS_FOUND = \
    No policy selectors found

ASSERTION_UNKNOWN = \
    No policy selector found which knows assertion {0}

ASSERTION_UNSUPPORTED = \
    Policy assertion {0} is not supported

SUBOPTIMAL_ALTERNATIVE_PICKED_WITH_FITNESS = \
    Suboptimal policy alternative selected with fitness "{0}"

RECONFIGURE_ALTERNATIVES = \
    Policy "{0}" contains more than one policy alternative. Please reconfigure the service \
    with only one policy alternative.

PRIVATE_CONSTRUCTOR_DOES_NOT_TAKE_NULL=Private constructor must not receive 'null' argument as a initial policy assertion list
PRIVATE_METHOD_DOES_NOT_ACCEPT_NULL_OR_EMPTY_COLLECTION=This private method does not accept null or empty collection

NEITHER_NULL_NOR_EMPTY_POLICY_COLLECTION_EXPECTED=Input policy collection is expected not to be null nor empty collection

POLICY_MAP_KEY_MUST_NOT_BE_NULL=Provided policy map key must not be null! Create a proper policy map key by calling one of PolicyMap's  createXxxScopeKey(...) methods first
EXCEPTION_WHILE_RETRIEVING_EFFECTIVE_POLICY_FOR_KEY=Exception occured while retrieving effective policy for given key {0}
REMOVE_OPERATION_NOT_SUPPORTED=Remove operation not supported by this iterator
UNRECOGNIZED_SCOPE_TYPE=Unrecoginzed scope type: "{0}"
INPUT_PARAMS_MUST_NOT_BE_NULL=Input parameters must not be null
SERVICE_PARAM_MUST_NOT_BE_NULL=Parameter 'service' must not be null
SERVICE_AND_PORT_PARAM_MUST_NOT_BE_NULL=Parameters "service" and "port" must not be null. (service={0}, port={1})
SERVICE_PORT_OPERATION_PARAM_MUST_NOT_BE_NULL=Parameters "service", "port" and "operation" must not be null. (service={0}, port={1}, operation={2})
SERVICE_PORT_OPERATION_FAULT_MSG_PARAM_MUST_NOT_BE_NULL=Parameters "service", "port", "operation" and "faultMessage" must not be null. (service={0}, port={1}, operation={2}, faultMessage={3})
NO_MORE_ELEMS_IN_POLICY_MAP=There are no more elements in the policy map
POLICY_MAP_KEY_HANDLER_NOT_SET=Policy map key handler is not set
POLICY_MAP_MUTATOR_ALREADY_CONNECTED=This policy map mutator is already connected to a policy map. \
                    Please, disconnect it first, before connecting to another policy map
SUBJECT_PARAM_MUST_NOT_BE_NULL=Parameter subject must not be null
SUBJECT_AND_POLICY_PARAM_MUST_NOT_BE_NULL=Parameters "subject" and "policy" must not be null. (subject={0}, policy={1})
INPUT_PARAMS_MUST_NOT_BE_NULL=Input parameters must not be null
INITIAL_POLICY_COLLECTION_MUST_NOT_BE_EMPTY=Initial collection of policies must not be empty
POLICY_TO_ATTACH_MUST_NOT_BE_NULL=Policy to be attached must not be null

METHOD_INVOCATION_FAILED=Method invocation failed (class={0}, method={1}, parameters={2})
SERVICE_CAN_NOT_BE_NULL=service can not be null
ILLEGAL_CFG_FILE_SYNTAX=Illegal configuration-file syntax
ILLEGAL_PROVIDER_CLASSNAME=Illegal provider-class name: {0}
SERVICE_PROVIDER_NOT_FOUND=Service provider {0} not found
SERVICE_PROVIDER_COULD_NOT_BE_INSTANTIATED=Service provider {0} could not be instantiated
SPI_FAIL_SERVICE_MSG={0}: {1}
SPI_FAIL_SERVICE_URL_LINE_MSG={0}:{1}: {2}

CANNOT_CREATE_ASSERTION_BAD_TYPE=Cannot create AssertionData instance for this type of ModelNode: "{0}"; \
                Supported types are "{1}" and "{2}"

STORAGE_TYPE_NOT_SUPPORTED=Storage type ''{0}'' is not supported

MODEL_NODE_TYPE_UNKNOWN=Unknown model node type "{0}"
POLICY_SRC_MODEL_INPUT_PARAMETER_MUST_NOT_BE_NULL=Policy source model input parameter must not be null
CREATE_CHILD_NODE_OPERATION_NOT_SUPPORTED=Cannot create child node of type ''{0}'' in the node of type ''{1}''. Create operation is not supported for this combination of node types.
OPERATION_NOT_SUPPORTED_FOR_THIS_BUT_ASSERTION_RELATED_NODE_TYPE=This operation is supported only for 'ASSERTION' and 'ASSERTION_PARAMETER_NODE' node types. It is not supported for the node type ''{0}''
OPERATION_NOT_SUPPORTED_FOR_THIS_BUT_POLICY_REFERENCE_NODE_TYPE=This operation is supported only for 'POLICY_REFERENCE' node type. It is not supported for the node type ''{0}''

PARENT_MODEL_CAN_NOT_BE_CHANGED=The parent model may not be changed on a child node which is not a root of the policy source model tree
UNABLE_TO_ACCESS_POLICY_SOURCE_MODEL=Unable to access policy source model identified by URI: {0}
UNABLE_TO_ACCESS_POLICY_SOURCE_MODEL_PLUS_REASON=Unable to access policy source model identified by URI: {0}\n\
                Detailed reason: {1}

POLICY_IS_NULL_RETURNING=policy is null, returning
UNEXPECTED_POLICY_ELEMENT_FOUND_IN_ASSERTION_PARAM=Unexpected nested policy element found in assertion parameter: {0}
UNEXPECTED_MULTIPLE_POLICY_NODES=Unexpected multiple nested policy nodes within a single assertion
UNEXPECTED_CHILD_MODEL_TYPE=Unexpected type of child model node nested in an 'ASSERTION' node: ''{0}''

ASSERTION_CREATOR_DOES_NOT_SUPPORT_ANY_URI=Discovered policy assertion creator of class=''{0}'' does not support any URI

ASSERTION_CREATOR_DISCOVERED=Policy assertion creator discovered: class=''{0}'', supported namespace=''{1}''
ERROR_REGISTERING_ASSERTION_CREATOR=Error registering policy assertion creator of class ''{0}'''. Supported domain nemaspace URI string must not be neither null nor empty!"

ERROR_MULTIPLE_ASSERTION_CREATORS_FOR_NAMESPACE=\
        Multiple policy assertion creators try to register for namespace ''{0}''. \
        Old creator`s class: ''{1}'', \
        new creator`s class: ''{2}''.

POLICY_MODEL_TRANSLATION_ERROR_INPUT_PARAM_NULL=Policy model translation error:  Input policy source model parameter is null
UNABLE_TO_CLONE_POLICY_SOURCE_MODEL=Unable to clone input policy source model
NUMBER_OF_ALTERNATIVE_COMBINATIONS_CREATED=Number of policy alternative combinations created: {0}
NO_ALTERNATIVE_COMBINATIONS_CREATED=No alternative combinations created: Returning "nothing allowed" policy
SINGLE_EMPTY_ALTERNATIVE_COMBINATION_CREATED=Single empty alternative combination created: Returning "anything allowed" policy
N_ALTERNATIVE_COMBINATIONS_M_POLICY_ALTERNATIVES_CREATED={0} policy alternative combinations created: Returning created policy with {1} inequal policy alternatives
UNEXPECTED_MODEL_NODE_TYPE_FOUND=Unexpected model node type ({0})found during policy expression content decomposition
UNEXPANDED_POLICY_REFERENCE_NODE_FOUND_REFERENCING=Unexpanded "POLICY_REFERENCE" node found referencing {0}
POLICY_REFERENCE_NODE_FOUND_WITH_NO_POLICY_REFERENCE_IN_IT=Unexpanded "POLICY_REFERENCE" node found containing no policy reference data
UNSUPPORTED_MODEL_NODE_TYPE=Unsupported model node type: ''{0}''
INCONSISTENCY_IN_POLICY_SOURCE_MODEL=Inconsistency in policy source model detected: Cannot create policy assertion parameter \
                    from a model node of type: ''{0}''

UNABLE_TO_INSTANTIATE_DIGEST_ALG_URI_FIELD=Unable to instantiate static constant field 'DEFAULT_DIGEST_ALGORITHM_URI'
DIGEST_MUST_NOT_BE_NULL_WHEN_ALG_DEFINED=Digest must not be null if the digest algorithm is defined

UNABLE_TO_SET_PARENT_MODEL_ON_ROOT=Unable to set parent model on root model node
POLICY_REFERENCE_NODE_EXPECTED_INSTEAD_OF=Input model node argument is not a policy reference. Real node type: {0}

MULTIPLE_POLICY_IDS_NOT_ALLOWED=Multiple identifiers of policy expression detected. \
        Single policy expression must not contain both wsu:Id and xml:id identifiers at once
POLICY_ELEMENT_EXPECTED_FIRST=Failed to unmarshal policy expression. Expected 'Policy' as a first XML element
FAILED_TO_UNMARSHALL_POLICY_EXPRESSION=Failed to unmarshal policy expression
POLICY_REFERENCE_URI_ATTR_NOT_FOUND=Policy reference 'URI' attribute not found
UNABLE_TO_UNMARSHALL_POLICY_MALFORMED_URI=Unable to unmarshall policy referenced due to malformed URI value in attribute
UNABLE_TO_UNMARSHALL_POLICY_XML_ELEM_EXPECTED=Failed to unmarshal policy expression. Expected XML element
MULTIPLE_ATTRS_WITH_SAME_NAME_DETECTED_FOR_ASSERTION=Multiple attributes with the same name "{0}" detected for assertion "{1}"
UNEXPECTED_VISIBILITY_ATTR_VALUE=Unexpected visibility attribute value: {0}
STORAGE_TYPE_NOT_SUPPORTED=Storage type "{0}" not supported
UNABLE_TO_INSTANTIATE_READER_FOR_STORAGE=Unable to instantiate XMLEventReader for given storage
UNMARSHALLING_FAILED_END_TAG_DOES_NOT_MATCH=Policy model unmarshalling failed: Actual XML end tag does not match current element. \
                    Expected tag FQN: "{0}", actual tag FQN: "{1}"
UNEXPECTED_CDATA_ON_SOURCE_MODEL_NODE=Unexpected character data on current policy source model node "{0}" : data = "{1}"