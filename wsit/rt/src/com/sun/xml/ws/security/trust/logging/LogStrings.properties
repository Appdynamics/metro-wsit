#### Logging Error codes

WST0001.unsupported.proofkey=WST0001:Unsupported proof key type: {0}. Expected {1}.

WST0004.unknown.serviceprovider=WST0004:Unknown target service provider {0}. MetaData extracted is null.

WST0005.classnotfound.null.contract=WST0005:Class {0} not found. 

WST0006.fail.rst.source=WST0006:Failed to create RST from Source {0}\n{1}.

WST0007.fail.rst.elem=WST0007:Failed to create RST from Element {0}\n{1}.

WST0008.fail.rstr.source=WST0008:Failed to create RSTR from Source {0}\n{1}.

WST0009.fail.rstr.elem=WST0009:Failed to create RSTR from Element {0}\n{1}.

WST0010.failed.creation.from.jaxbele=WST0010:There was a problem while creating {0} from JAXBElement.\n{1}.

WST0011.parserconfig.ex.toElement=WST0011:Parser configuration exception while creating element.\nEncountered due to {1}.

WST0012.jaxb.ex.toElement=WST0012:JAXBException encountered while creating Element. Undelying cause {1}.

WST0013.error.secret.key=WST0013:Error in computing secret key due to {0}.

WST0014.uri.syntax=WST0014:Error in creating RSTR. Error in RST context's URI: {0}.

WST0015.client.not.authorized=WST0015:The client {0} is not authorized to be issued the token of type {1} apply to {2}.

WST0016.problem.itCtx=WST0016:There was a problem in creating Issed Token Context.

WST0017.service.portname.error=WST0017:Could not obtain sts service and port names through MEX. ServiceName: {0} and PortName: {1}. 

WST0018.tokens.null=WST0018:Security Token and Proof Tokens cannot be both null.

WST0019.invalid.proofToken.type=WST0019:Invalid Proof Token Type: {0}.

WST0020.error.decoding=WST0020:Error while decoding {0}.

WST0021.error.unmarshal.domElement=WST0021:Error while unmarshalling into JAXBElement from a dom Element {0}.

WST0022.invalid.entropy=WST0022:Invalid entropy type: {0}.

WST0023.invalid.uri.syntax=WST0023:Invalid URI syntax: {0}.

WST0024.invalid.request.type=WST0024:Invalid Request Type: {0}. Must be one of Issue, Cancel, KeyExchange, Renew, or Validate.

WST0025.invalid.key.type=WST0025:Invalid Key Type: {0}. Must be one of Public or Symmetric Key.

WST0026.invalid.ck.algorithm=WST0026:Invalid Computed Key Algorithm {0}. Must be one of HASH or PSHA1.

WST0027.invalid.proofToken.type=WST0027:Invalid Proof Token Type: {0}.

WST0028.invalid.ck=WST0026:Invalid Computed Key {0}. Must be one of HASH or PSHA1.

WST0029.could.not.get.sts.location:WST0029:STS location could not be obtained from either IssuedToken or from client configuration.


#### Info, Fine and Warning messages ####
#### Codes starting from 1000+
WST1001.token.type=WST1001:Token type: {0}.

WST1002.provider.type=WST1002:STS provider configuration type {0}.

WST1003.tokentype.appliesto.null=WST1003:TokenType and AppliesTo cannot be both null.

WST1004.error.marshal.toString=WST1004:Error in Marshalling Element to string for logging {0}.

WST1005.created.rstr.collection=WST1005:Create a collection of RequestSecurityTokenResponse(s) {0}.

WST1006.created.rst.issue=WST1006:Created RST for Issue:\n {0} \n

WST1007.created.rstr.issue=WST1007:Created RSTR for Issue:\n {0} \n

WST1008.created.rstr.cancel=WST1008:Created RSTR for Cancel:\n {0} \n

WST1009.null.binary.secret=WST1009:Binary Secret is null.

WST1010.key.size=WST1010:Keysize value: {0}.

WST1011.problem.metadata=WST1011:Problem in extracting MetaData from Issued Token.

WST1012.service.portname.mex=WST1012:Getting sts service and port names through MEX. ServiceName: {0} and PortName: {1}. 

WST1013.sts.uri.client=WST1013:Getting STS location from client configuration. STS URI: {0}.

WST1014.response.invoking.rst=WST1014:RSTR Reponse on invoking RST:\n {0} \n
