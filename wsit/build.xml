<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<project name="WSIT-Binary" default="main" basedir=".">
    <description>Builds, tests, and runs the project WSIT-Binary.</description>
    <import file="nbproject/build-impl.xml"/>
    <import file="properties.xml"/>

    <taskdef name="installerBuilder"
        classname="com.sun.tools.xjc.installer.builder.BuilderTask">
        <classpath>
            <fileset dir="${etc.lib.dir}" includes="installer-builder.jar, sfx4j-1.0.jar"/>
        </classpath>
    </taskdef>

    <target name="-do-jar-without-manifest" depends="image">
        <mkdir dir="${dist.dir}"/>
        <zip basedir="${dist.image.dir}" destfile="${dist.dir}/${install.name}.zip"/>
        <installerBuilder classFile="${dist.dir}/${install.name}-installer.jar" licenseFile="CDDLv1.0.1.txt" zipFile="${dist.dir}/${install.name}.zip"/>
    </target>

    <target name="dist" depends="jar"/>

    <target name="main" depends="dist"
        description="Create the wsit tool and runtime jars and installers."/>
    
    <target name="image" description="Create the wsit tool and runtime jars.">
        <copy todir="${dist.image.wsit.dir}">
            <fileset dir="${basedir}" includes="CDDL*.*"/>
            <fileset dir="${etc.dir}" includes="wsit-on-*.*"/>
        </copy>
    </target>

    <target name="-javadoc-build" depends="init"/>
    
    <target name="src-zip">
        <ant dir="${rt.dir}" target="src-zip"/>
        <ant dir="${tools.dir}" target="src-zip"/>
    </target>

    <target name="integrate-jaxws-hudson" description="integrates latest JAX-WS 2.1 bits in WSIT, meant for internal consumption only">
        <!-- JAX-WS 2.1 JARs -->

        <!-- Unzip the JARs -->
        <mkdir dir="${tmpdir}"/>
        <get src="http://kohsuke.sfbay/hudson/job/jaxws-ri-21/lastSuccessfulBuild/artifact/jax-ws-sources/jaxws-ri/build/jaxws-ri.zip"
                dest="${tmpdir}/jaxws-ri.zip"/>
        <unzip src="${tmpdir}/jaxws-ri.zip" dest="${tmpdir}"/>

        <!-- unzip the JAR source zips -->
        <get src="http://kohsuke.sfbay/hudson/job/jaxws-ri-21/lastSuccessfulBuild/artifact/jax-ws-sources/jaxws-ri/build/jaxws-libs.src.zip"
                dest="${tmpdir}/jaxws-libs.src.zip"/>
        <unzip src="${tmpdir}/jaxws-libs.src.zip" dest="${tmpdir}"/>

        <!-- copy to relevant directories -->
        <copy todir="${lib.runtime.dir}" overwrite="true" verbose="${verbose}">
            <fileset dir="tmp/jaxws-ri/lib" includes="*.jar" excludes="jaxb-xjc.*, *-tools.*"/>
            <fileset dir="tmp" includes="*.zip" excludes="jaxb-xjc.*, *-tools.*"/>
        </copy>
        <copy todir="${lib.tooltime.dir}" overwrite="true" verbose="${verbose}">
            <fileset dir="tmp/jaxws-ri/lib" includes="jaxb-xjc.*, *-tools.*"/>
            <fileset dir="tmp" includes="jaxb-xjc.*, *-tools.*"/>
        </copy>

        <!-- unzip the JAX-WS source zips -->
        <get src="http://kohsuke.sfbay/hudson/job/jaxws-ri-21/lastSuccessfulBuild/artifact/jax-ws-sources/jaxws-ri/dist/jaxws-ri/lib/jaxws-rt.src.zip"
                dest="${lib.runtime.dir}/jaxws-rt.src.zip"/>
        <get src="http://kohsuke.sfbay/hudson/job/jaxws-ri-21/lastSuccessfulBuild/artifact/jax-ws-sources/jaxws-ri/dist/jaxws-ri/lib/jaxws-tools.src.zip"
                dest="${lib.tooltime.dir}/jaxws-tools.src.zip"/>

        <!-- Local transport JAR and Source -->
        <get src="http://kohsuke.sfbay/hudson/job/jaxws-ri-21/lastSuccessfulBuild/artifact/jax-ws-sources/jaxws-ri/transports/local/build/jaxws-local-transport.jar"
                dest="${lib.runtime.dir}/jaxws-local-transport.jar"/>
        <get src="http://kohsuke.sfbay/hudson/job/jaxws-ri-21/lastSuccessfulBuild/artifact/jax-ws-sources/jaxws-ri/transports/local/build/jaxws-local-transport-src.zip"
                dest="${lib.runtime.dir}/jaxws-local-transport-src.zip"/>

        <delete dir="${tmpdir}" includeemptydirs="true"/>
    </target>

    <target name="runtests">
      <ant antfile="run-ql-tests.xml"/>
    </target>

    <target name="create-wsit-runtime-jar">
        <ant dir="${rt.dir}" target="create-wsit-runtime-jar"/>
    </target>
     <target name="create-wsit-tools-jar">
        <ant dir="${tools.dir}" target="create-wsit-tools-jar"/>
    </target>

    <target name="create-wsit-jars" depends="jar" >
        <antcall target="create-wsit-runtime-jar"/>
        <antcall target="create-wsit-tools-jar"/>
    </target>

    <target name="create-wsit-integration-zip">
       <antcall target="create-wsit-jars"/>
        <property name="wsit.integration.dir" value="${dist.dir}/wsit-integration"/>
        <mkdir dir="${dist.dir}/wsit-integration"/>

        <copy todir="${wsit.integration.dir}" >
            <fileset dir="${rt.dir}/build">
                <include name="wsit-*.*"/>
            </fileset>
        </copy>
        <copy todir="${wsit.integration.dir}" >
            <fileset dir="${tools.dir}/build/">
                <include name="wsit-*.*"/>
            </fileset>
        </copy>
        <copy todir="${wsit.integration.dir}">
            <fileset dir="${lib.runtime.dir}">
                <include name="xws-security.jar"/>
                <include name="trust-jaxbbindings.jar"/>
                <include name="secconv-jaxbbindings.jar"/>
            </fileset>
        </copy>
        <zip destfile="${wsit.integration.dir}/wsit-integration.zip">
                   <fileset dir="${wsit.integration.dir}">
                       <include name="wsit-rt*.*"/>
                       <include name="wsit-tools*.*"/>
                       <include name="xws-security.jar"/>
                       <include name="trust-jaxbbindings.jar"/>
                   </fileset>

         </zip>
    </target>
    
    <target name="-post-compile-test"
            description="Run unit tests of dependent projects">
        <ant dir="${rt.dir}"
             target="test"
             inheritAll="false"/>
    </target>

</project>
