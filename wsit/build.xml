<?xml version="1.0"?>

<!--
 $Id: build.xml,v 1.3 2006-05-04 02:01:21 arungupta Exp $

 Copyright (c) 2005 Sun Microsystems, Inc.
 All rights reserved.
-->

<project name="wsit.dev.java.net main" default="main" basedir=".">
    <import file="properties.xml"/>

    <!--
    TODO:
     1. Aggregate manifest information of dependent jar files
     2. Add version/timestamp/build # as manifest to webservices*.jar
    -->

    <taskdef name="installerBuilder"
        classname="com.sun.tools.xjc.installer.builder.BuilderTask">
        <classpath>
            <fileset dir="${etc.lib.dir}" includes="installer-builder.jar, sfx4j-1.0.jar"/>
        </classpath>
    </taskdef>

    <path id="runtime.compile.classpath">
        <fileset dir="${lib.runtime.dir}" includes="*.jar"/>
        <fileset dir="${lib.tooltime.dir}" includes="*.jar"/>
        <fileset dir="${lib.compiletime.dir}" includes="*.jar"/>
    </path>

    <path id="tools.compile.classpath" refid="runtime.compile.classpath"/>

    <target name="prepare">
        <mkdir dir="${dist.image.wsit.lib.dir}"/>
    </target>

    <target name="main" depends="dist"/>

    <target name="dist" depends="image">
        <mkdir dir="${dist.dir}"/>
        <zip basedir="${dist.image.dir}" destfile="${dist.dir}/${install.name}.zip"/>
        <installerBuilder classFile="${dist.dir}/${install.name}-installer.jar" licenseFile="CDDLv1.0.1.txt" zipFile="${dist.dir}/${install.name}.zip"/>
    </target>

    <target name="image" depends="build, combine-jars">
        <copy todir="${dist.image.wsit.dir}">
            <fileset dir="${basedir}" includes="CDDL*.*"/>
            <fileset dir="${etc.dir}" includes="wsit-on-*.*"/>
        </copy>
        <copy todir="${dist.image.wsit.lib.dir}">
            <fileset dir="${tools.dir}/build" includes="*.jar"/>
            <fileset dir="${rt.dir}/build" includes="*.jar"/>
        </copy>
    </target>

    <target name="build" depends="prepare, runtime-build, tools-build"/>

    <macrodef name="combine-jars-macro">
        <attribute name="libdir"/>
        <attribute name="classesdir"/>
        <attribute name="jarname"/>
        <element name="metainf" optional="true"/>
        <sequential>
            <property name="tmpdir" value="${dist.image.dir}/tmp"/>
            <unjar dest="${tmpdir}">
                <fileset dir="@{libdir}" includes="*.jar"/>
            </unjar>
            <delete dir="${tmpdir}/META-INF" includeemptydirs="true" excludes="services/**"/>

            <!-- TODO: Append to already existing service providers -->
            <!-- TODO: Classify by tooltime/runtime -->
            <metainf/>
            <jar destfile="${dist.image.wsit.lib.dir}/@{jarname}.jar">
                <fileset dir="${tmpdir}"/>
                <fileset dir="@{classesdir}"/>
            </jar>
            <delete dir="${tmpdir}" includeemptydirs="true"/>
        </sequential>
    </macrodef>

    <target name="combine-jars" depends="combine-jars-tooltime, copy-services, combine-jars-runtime"/>

    <target name="copy-services">
        <copy todir="${tmpdir}/META-INF/services">
            <fileset dir="etc/META-INF/services" includes="*.*"/>
        </copy>
    </target>

    <target name="combine-jars-runtime">
        <combine-jars-macro jarname="${name}" libdir="${lib.runtime.dir}" classesdir="${rt.dir}/build/classes">
            <metainf>
                <copy todir="${tmpdir}/META-INF/services">
                    <fileset dir="etc/META-INF/services" includes="*.*"/>
                </copy>
            </metainf>
        </combine-jars-macro>
    </target>

    <target name="combine-jars-tooltime">
        <combine-jars-macro jarname="${name}-tools" libdir="${lib.tooltime.dir}" classesdir="${tools.dir}/build/classes"/>
    </target>

    <target name="runtime-build">
        <ant dir="${rt.dir}" target="compile" inheritrefs="true"/>
    </target>

    <target name="tools-build">
        <ant dir="${tools.dir}" target="compile" inheritrefs="true"/>
    </target>

    <target name="src-zip">
        <ant dir="${rt.dir}" target="src-zip"/>
        <ant dir="${tools.dir}" target="src-zip"/>
    </target>
    
    <target name="get-servlet-jar-local">
        <get src="https://jax-ws-sources.dev.java.net/source/browse/jax-ws-sources/jaxws-ri/servlet/lib/Attic/servlet.jar?rev=1.1.2.1&amp;only_with_tag=rearch-2005&amp;view=auto&amp;content-type=text/vnd.viewcvs-markup"
            dest="${lib.compiletime.dir}/servlet.jar"/>
    </target>

    <target name="clean">
        <delete dir="build"/>
        <delete dir="${dist.dir}"/>
        <ant dir="${basedir}/tools" target="clean"/>
        <ant dir="${basedir}/rt" target="clean"/>
    </target>
</project>
