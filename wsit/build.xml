<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<project name="WSIT-Binary" default="main" basedir=".">
    <description>Builds, tests, and runs the project WSIT-Binary.</description>
    <import file="nbproject/build-impl.xml"/>
    <import file="properties.xml"/>

    <taskdef name="installerBuilder"
        classname="com.sun.tools.xjc.installer.builder.BuilderTask">
        <classpath>
            <fileset dir="${etc.lib.dir}" includes="installer-builder.jar, sfx4j-1.0.jar"/>
        </classpath>
    </taskdef>

    <target name="-do-jar-without-manifest" depends="image">
        <mkdir dir="${dist.dir}"/>
        <zip basedir="${dist.image.dir}" destfile="${dist.dir}/${install.name}.zip"/>
        <installerBuilder classFile="${dist.dir}/${install.name}-installer.jar" licenseFile="CDDLv1.0.1.txt" zipFile="${dist.dir}/${install.name}.zip"/>
    </target>

    <target name="dist" depends="jar"/>

    <target name="main" depends="dist"
        description="Create the wsit tool and runtime jars and installers."/>
    
    <target name="image" description="Create the wsit tool and runtime jars.">
        <copy todir="${dist.image.wsit.dir}">
            <fileset dir="${basedir}" includes="CDDL*.*"/>
            <fileset dir="${etc.dir}" includes="wsit-on-*.*"/>
        </copy>
    </target>

    <target name="-javadoc-build" depends="init"/>
    
    <target name="src-zip">
        <ant dir="${rt.dir}" target="src-zip"/>
        <ant dir="${tools.dir}" target="src-zip"/>
    </target>

    <target name="integrate-jaxwsa-hudson" description="integrates latest JAX-WSA bits in WSIT, meant for internal consumption only">
        <mkdir dir="tmp/jaxwsa"/>
        <get src="http://kohsuke.sfbay/hudson/job/jaxwsa-ri-rearch-2005/lastSuccessfulBuild/artifact/jax-wsa-sources/jaxwsa-ri/build/lib/jaxwsa-api.jar"
             dest="${lib.runtime.dir}/jaxwsa-api.jar"/>
        <get src="http://kohsuke.sfbay/hudson/job/jaxwsa-ri-rearch-2005/lastSuccessfulBuild/artifact/jax-wsa-sources/jaxwsa-ri/lib/jaxwsa-api-src.zip"
             dest="${lib.runtime.dir}/jaxwsa-api-src.zip"/>
        <get src="http://kohsuke.sfbay/hudson/job/jaxwsa-ri/lastSuccessfulBuild/artifact/jax-wsa-sources/jaxwsa-ri/build/lib/jaxwsa-rt.jar"
             dest="${lib.runtime.dir}/jaxwsa-rt.jar"/>
        <get src="http://kohsuke.sfbay/hudson/job/jaxwsa-ri/lastSuccessfulBuild/artifact/jax-wsa-sources/jaxwsa-ri/build/jaxwsa-rt-src.zip"
             dest="${lib.runtime.dir}/jaxwsa-rt-src.zip"/>
        <get src="http://kohsuke.sfbay/hudson/job/jaxwsa-ri/lastSuccessfulBuild/artifact/jax-wsa-sources/jaxwsa-ri/build/lib/jaxwsa-tools.jar"
             dest="${lib.tooltime.dir}/jaxwsa-tools.jar"/>
        <get src="http://kohsuke.sfbay/hudson/job/jaxwsa-ri/lastSuccessfulBuild/artifact/jax-wsa-sources/jaxwsa-ri/build/jaxwsa-tools-src.zip"
             dest="${lib.tooltime.dir}/jaxwsa-tools-src.zip"/>

        <get src="http://kohsuke.sfbay/hudson/job/jaxwsa-ri/lastSuccessfulBuild/artifact/jax-wsa-sources/jaxwsa-ri/build/jaxwsa-libs.zip"
             dest="tmp/jaxwsa-libs.zip"/>

        <unzip src="tmp/jaxwsa-libs.zip" dest="tmp/jaxwsa"/>
        <copy todir="${lib.runtime.dir}" overwrite="true" verbose="${verbose}">
            <fileset dir="tmp/jaxwsa" includes="*.zip, *.jar" excludes="jaxb-xjc.*, *-tools.*"/>
        </copy>
        <copy todir="${lib.tooltime.dir}" overwrite="true" verbose="${verbose}">
            <fileset dir="tmp/jaxwsa" includes="jaxb-xjc.*, *-tools.*"/>
        </copy>
        <delete dir="tmp" includeemptydirs="true"/>
    </target>

    <target name="runtests">
      <ant antfile="run-ql-tests.xml"/>
    </target>

    <target name="create-wsit-runtime-jar">
        <ant dir="${rt.dir}" target="create-wsit-runtime-jar"/>
    </target>
     <target name="create-wsit-tools-jar">
        <ant dir="${tools.dir}" target="create-wsit-tools-jar"/>
    </target>
    <target name="create-wsit-jars" depends="jar" >
        <antcall target="create-wsit-runtime-jar"/>
        <antcall target="create-wsit-tools-jar"/>
    </target>
</project>
