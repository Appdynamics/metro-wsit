<?xml version="1.0"?>

<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the License).  You may not use this file except in
 compliance with the License.
 
 You can obtain a copy of the license at
 https://glassfish.dev.java.net/public/CDDLv1.0.html.
 See the License for the specific language governing
 permissions and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 Header Notice in each file and include the License file
 at https://glassfish.dev.java.net/public/CDDLv1.0.html.
 If applicable, add the following below the CDDL Header,
 with the fields enclosed by brackets [] replaced by
 you own identifying information:
 "Portions Copyrighted [year] [name of copyright owner]"
 
 Copyright 2006 Sun Microsystems Inc. All Rights Reserved
-->

<project name="wsit.dev.java.net build properties">
    <property name="name" value="webservices"/>
    <property name="install.name" value="jax-ws-latest-wsit"/>
    <property name="lib.dir" value="lib"/>
    <property name="lib.runtime.dir" value="${lib.dir}/runtime"/>
    <property name="lib.tooltime.dir" value="${lib.dir}/tooltime"/>
    <property name="lib.compiletime.dir" value="${lib.dir}/compiletime"/>
    <property name="dist.dir" value="dist"/>
    <property name="dist.image.dir" value="${dist.dir}/image"/>
    <property name="dist.image.wsit.dir" value="${dist.image.dir}/jax-ws-latest-wsit"/>
    <property name="dist.image.wsit.lib.dir" value="${dist.image.wsit.dir}/lib"/>
    <property name="build.javadocs.dir" value="${basedir}/build/javadocs"/>
    
    <property name="etc.dir" value="etc"/>
    <property name="etc.lib.dir" value="${etc.dir}/lib"/>
    <property name="etc.metainf.dir" value="${etc.dir}/META-INF"/>
    <property name="etc.metainf.services.dir" value="${etc.dir}/META-INF/services"/>
    
    <property name="rt.dir" value="${basedir}/rt"/>
    <property name="rt.classes" value="${rt.dir}/build/classes"/>
    <property name="tools.dir" value="${basedir}/tools"/>
    
    <property name="compile.debug" value="true"/>
    <property name="compile.deprecation" value="false"/>
    <property name="compile.optimize" value="false"/>
    
    <property name="release.impl.version" value="1.0"/>
    <property name="release.impl.version.suffix" value="EA"/>
    <tstamp>
        <format property="now" pattern="MM/dd/yyyy hh:mm aa" unit="hour" locale="en_US"/>
    </tstamp>
    <property name="build.id" value="${now}(${user.name})" />
    <property name="build.version" value="${ant.project.name} ${release.impl.version}-${build.id}-${release.impl.version.suffix}" />
    
   <property name="tmpdir" value="${basedir}/build/tmp"/>
   <property name="apijar-tmpdir" value="${tmpdir}/apijars"/>
   <property name="rtjar-tmpdir" value="${tmpdir}/rtjars"/>
   <property name="toolsjar-tmpdir" value="${tmpdir}/toolsjars"/>
   <property name="extrajar-tmpdir" value="${tmpdir}/extrajars"/>
   <property name="extraapijar-tmpdir" value="${tmpdir}/extraapijars"/>
    
    <macrodef name="updateManifestWithVersion"
              description="updates a jar manifest file with the version information">
        <attribute name="file" />
        <sequential>
            <manifest mode="update" file="@{file}">
                <attribute name="Build-Id" value="${build.id}" />
                <attribute name="Build-Version" value="${build.version}" />
                <attribute name="Major-Version" value="${release.impl.version}" />
            </manifest>
        </sequential>
    </macrodef>
    
    <target name="maven-tasks"
            description="Import the Ant tasks from the Maven 2 Antlib and define a default Maven 2 repository">
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml">
            <classpath>
                <pathelement location="../etc/lib/maven-artifact-ant-2.0.4-dep.jar" />
            </classpath>
        </typedef>
        <remoteRepository id="maven.repository" url="http://www.ibiblio.org/maven2/"/>
    </target>
    
    <target name="pmd" depends="init, maven-tasks"
            description="Run PMD on all source code">
        <!-- Download PMD from Maven repository -->
        <dependencies pathId="pmd.classpath" useScope="runtime">
            <remoteRepository refid="maven.repository"/>
            <dependency groupId="pmd" artifactId="pmd" version="3.7"/>
        </dependencies>
        <typedef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
            <classpath refid="pmd.classpath"/>
        </typedef>
        <pmd targetjdk="${javac.target}">
            <ruleset>basic</ruleset>
            <ruleset>braces</ruleset>
            <ruleset>clone</ruleset>
            <ruleset>codesize</ruleset>
            <ruleset>coupling</ruleset>
            <ruleset>design</ruleset>
            <ruleset>finalizers</ruleset>
            <ruleset>imports</ruleset>
            <ruleset>logging-java</ruleset>
            <ruleset>naming</ruleset>
            <ruleset>optimizations</ruleset>
            <ruleset>strictexception</ruleset>
            <ruleset>strings</ruleset>
            <ruleset>sunsecure</ruleset>
            <ruleset>unusedcode</ruleset>
            <formatter type="html" toFile="${build.dir}/pmd.html"/>
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
                <exclude name="**/tx/webservice/member/**/*.java"/> <!-- ignore generated tx code -->
            </fileset>
        </pmd>
    </target>
    
    <target name="findbugs" depends="init, maven-tasks, compile"
            description="Run findbugs on all code">
        <!-- Download findbugs from Maven repository -->
        <dependencies pathId="findbugs.classpath"
                      useScope="runtime">
            <remoteRepository refid="maven.repository"/>
            <dependency groupId="net.sourceforge.findbugs"
                       artifactId="findbugs"
                       version="1.0.0"/>
            <dependency groupId="net.sourceforge.findbugs"
                       artifactId="coreplugin"
                       version="1.0.0"/>
        </dependencies>
        <typedef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
            <classpath refid="findbugs.classpath"/>
        </typedef>
        <!-- We need to pass a classpath property into the findbugs task             -->
        <!-- Convert the path that was created by the depencies task into a property -->
        <pathconvert property="findbugs.classpath">
            <path refid="findbugs.classpath"/>
        </pathconvert>
        <findbugs output="html" outputFile="${build.dir}/findbugs.html"
                  stylesheet="fancy.xsl"
                  classpath="${findbugs.classpath}"
                  pluginList="${user.home}/.m2/repository/net/sourceforge/findbugs/coreplugin/1.0.0/coreplugin-1.0.0.jar">
            <class location="${build.classes.dir}"/>
            <auxClasspath>
                <path path="${run.classpath}"/>
            </auxClasspath>
            <sourcePath path="${src.dir}"/>
        </findbugs>
    </target>

</project>
