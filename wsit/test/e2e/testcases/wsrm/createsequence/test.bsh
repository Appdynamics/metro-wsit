import com.sun.xml.ws.rm.Message;
import com.sun.xml.ws.rm.Sequence;
import com.sun.xml.ws.rm.jaxws.runtime.client.RMSource;
import com.sun.xml.ws.rm.jaxws.runtime.client.ClientOutboundSequence;
import javax.xml.namespace.QName;

QName qname = new QName("http://tempuri.org/", "WSHttpBinding_IPing");
service = new wsrm.createsequence.client.PingService();
IPing port = service.getWSHttpBindingIPing();
IPing port2 = service.getWSHttpBindingIPing();
IPing port3 = service.getWSHttpBindingIPing();



try {
    ClientOutboundSequence seq = RMSource.getRMSource().createSequence(service, qname);
    
    id1 = seq.getId();
    assertNotNull(id1);
    
    port.getRequestContext().put("com.sun.xml.ws.sequence", seq);
    port2.getRequestContext().put("com.sun.xml.ws.sequence", seq);
    

    id2 = port.getSequenceID(null);

    print("id1 = " + id1 + " id2=" + id2);

    assertNotNull(id1);
    assertEquals(id1, id2);

    id3 = port2.getSequenceID(null);
    assertEquals(id3, id2);
    num = port2.getMessageNumber(null);
    
    print("message number = " + num); 
    assertEquals(num, "3");

    //set message number on request
    port.getRequestContext().put("com.sun.xml.ws.messagenumber", 8);
    num = port.getMessageNumber(null);
    assertEquals(num, "8");
    port.getRequestContext().put("com.sun.xml.ws.messagenumber", null);

    //verify that nextmessage number is set correctly
    num = port.getMessageNumber(null);
    assertEquals(num, "9");

    //verify that we can use a smaller (unused) message number
    port.getRequestContext().put("com.sun.xml.ws.messagenumber", 6);
    num = port.getMessageNumber(null);
    assertEquals(num, "6");
    port.getRequestContext().put("com.sun.xml.ws.messagenumber", null);
   

    //get rid of the sequence and recreate it.
    id = seq.getId();
    offeredid = seq.getInboundSequence().getId();
    RMSource.getRMSource().removeOutboundSequence(seq);

    seq2 = RMSource.getRMSource().createSequence(service, qname, id, offeredid);
    assertNotNull(seq2);

    //make sure new sequence uses old id
    idnew = seq2.getId();
    assertEquals(idnew, id);

    //make sure that we can use the new sequence
    port3.getRequestContext().put("com.sun.xml.ws.sequence", seq2);
    //user needs to take care to set the next message number correctly
    port3.getRequestContext().put("com.sun.xml.ws.messagenumber", 10);
    num = port3.getMessageNumber(null);
    print("num = " + num);  
    port3.getRequestContext().put("com.sun.xml.ws.messagenumber", null);

      
} finally {
    port.close();
    port2.close();
    port3.close();
}
