<?xml version="1.0" encoding="UTF-8"?>

<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the License).  You may not use this file except in
 compliance with the License.
 
 You can obtain a copy of the license at
 https://glassfish.dev.java.net/public/CDDLv1.0.html.
 See the License for the specific language governing
 permissions and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 Header Notice in each file and include the License file
 at https://glassfish.dev.java.net/public/CDDLv1.0.html.
 If applicable, add the following below the CDDL Header,
 with the fields enclosed by brackets [] replaced by
 you own identifying information:
 "Portions Copyrighted [year] [name of copyright owner]"
 
 Copyright 2006 Sun Microsystems Inc. All Rights Reserved
-->


<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the "License").  You may not use this file except
 in compliance with the License.
 
 You can obtain a copy of the license at
 https://jwsdp.dev.java.net/CDDLv1.0.html
 See the License for the specific language governing
 permissions and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 HEADER in each file and include the License file at
 https://jwsdp.dev.java.net/CDDLv1.0.html  If applicable,
 add the following below this CDDL HEADER, with the
 fields enclosed by brackets "[]" replaced with your
 own identifying information: Portions Copyright [yyyy]
 [name of copyright owner]
-->

<project basedir="." default="help" name="wsit-jaxws-fromwsdl">

    <property environment="env"/>
    <property file="etc/build.properties"/>
    <property name="build.home" value="${basedir}/build"/>
    <property name="build.classes.home" value="${build.home}/classes"/>
    <property name="build.war.home" value="${build.home}/war"/>
    <property name="war.file" value="${build.war.home}/${ant.project.name}.war"/>
    <property name="domain" value="domain1"/>

    <condition property="as.home" value="${env.AS_HOME}">
        <isset property="env.AS_HOME"/>
    </condition>

    <condition property="catalina.home" value="${env.CATALINA_HOME}">
        <isset property="env.CATALINA_HOME"/>
    </condition>

    <!--
        There are 2 ways to designate a tomcat build.
    -->
    <condition property="bld.for.tomcat" value="true">
          <or>
             <and>
                 <not><isset property="as.home"/></not>
                 <isset property="catalina.home"/>
             </and>

             <and>
                 <isset property="as.home"/>
                 <isset property="catalina.home"/>
                 <isset property="use.tomcat"/>
             </and>
          </or>
    </condition>

    <!--
        Verify that one of the two supported containers is identified
        for use.  If these are not set correctly lib.home and deploy.dir
        will not be correct and all elements that use them will not be correct.
    -->
    <fail message="Web container not identified. Require AS_HOME or CATALINA_HOME be s
et" >
          <condition >
              <and>
                  <not><isset property="as.home"/></not>
                  <not><isset property="catalina.home"/></not>
              </and>
          </condition>
      </fail>
   <fail message="Two Web containers identified. Only one allowed AS_HOME or CATALINA_
HOME" >
      <condition>
          <and>
              <isset property="as.home"/>
              <isset property="catalina.home"/>
              <not><isset property="use.tomcat"/></not>
          </and>
      </condition>
   </fail>


    <condition property="lib.home" value="${catalina.home}/shared/lib" else="${as.home}/lib">
	<isset property="bld.for.tomcat"/>
    </condition>

    <condition property="deploy.dir" value="${catalina.home}/webapps" else="${as.home}/domains/${domain}/autodeploy">
	<isset property="bld.for.tomcat"/>
    </condition>
    
    <path id="wsit.classpath">
        <pathelement location="${java.home}/../lib/tools.webservices-rt.jar"/>
        <fileset dir="${lib.home}">
            <include name="webservices-rt.jar"/>
            <include name="webservices-tools.jar"/>
            <include name="javaee.jar"/>
        </fileset>
    </path>

    <taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
        <classpath refid="wsit.classpath"/>
    </taskdef>

    <target name="setup">
        <mkdir dir="${build.home}"/>
        <mkdir dir="${build.classes.home}"/>
        <mkdir dir="${build.war.home}"/>
    </target>

    <target name="clean">
        <delete dir="${build.home}" includeEmptyDirs="true" />
    </target>

    <target name="build-server-wsdl" depends="setup">
        <wsimport
            debug="${debug}"
            verbose="${verbose}"
            keep="${keep}"
            extension="${extension}"
            destdir="${build.classes.home}"
            wsdl="${basedir}/${server.wsdl}">
            <binding dir="${basedir}/etc" includes="${server.binding}"/>
        </wsimport>
        <javac
            fork="true"
            srcdir="${basedir}/src"
            destdir="${build.classes.home}"
            includes="**/server/**,**/common/**">
            <classpath refid="wsit.classpath"/>
        </javac>
    </target>

    <target name="create-war">
        <war warfile="${war.file}" webxml="etc/web.xml">
    	      <webinf dir="${basedir}/etc" includes="sun-jaxws.xml"/>
    	      <zipfileset
                dir="${basedir}/etc"
                includes="*.wsdl, *.xsd"
                prefix="WEB-INF/wsdl"/>
    	      <classes dir="${build.classes.home}"/>
        </war>
    </target>

    <target name="generate-client" depends="setup">
        <wsimport
            debug="${debug}"
            verbose="${verbose}"
            keep="${keep}"
            extension="${extension}"
            destdir="${build.classes.home}"
            wsdl="${client.wsdl}">
            <binding dir="${basedir}/etc" includes="${client.binding}"/>
        </wsimport>
    </target>

    <target name="client" depends="generate-client">
        <javac
            fork="true"
            srcdir="${basedir}/src"
            destdir="${build.classes.home}"
            includes="**/client/**,**/common/**">
            <classpath refid="wsit.classpath"/>
        </javac>
    </target>

    <target name="run">
        <java fork="true" classname="${client}">
            <classpath>
                <path refid="wsit.classpath"/>
                <pathelement location="${build.classes.home}"/>
                <pathelement location="${basedir}/etc"/>
            </classpath>
        </java>
    </target>

    <target name="deploy">
        <copy file="${war.file}" todir="${deploy.dir}"/>
    </target>

    <target name="help">
        <echo message="server:       Builds and deploy the service endpoint WAR"/>
        <echo message="client:       Builds the client"/>
        <echo message="run:          Runs the client"/>
    </target>

    <target name="server" depends="setup">

        <antcall target="clean" />

        <antcall target="build-server-wsdl" />

        <antcall target="create-war" />

        <antcall target="deploy" />
    </target>

</project>
